package com.collegebranch.app;


import static com.codename1.ui.CN.*;

import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.collegebranch.app.mentee.MenteeHome;
import com.collegebranch.app.mentor.MentorHome;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class SignIn {

    public static LoginLayout Layout;
    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(false);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Layout = new LoginLayout();
        Layout.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

    public static void checkData(){
        if (Layout.gui_UsernameText.getText().isEmpty())
            Layout.gui_LoginButton.setEnabled(false);
        else if (Layout.gui_PasswordText.getText().isEmpty())
            Layout.gui_LoginButton.setEnabled(false);
        else Layout.gui_LoginButton.setEnabled(Layout.gui_MenteeSelect.isSelected() || Layout.gui_MentorSelect.isSelected());


    }
    public static void login() {
        if (Layout.gui_MenteeSelect.isSelected()) {
            MenteeHome menteeHome = new MenteeHome();
            menteeHome.start();
        }
        else if (Layout.gui_MentorSelect.isSelected()) {
            MentorHome mentorHome = new MentorHome();
            mentorHome.start();
        }
    }

}
